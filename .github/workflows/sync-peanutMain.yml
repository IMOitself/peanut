name: Sync to peanutMain

on:
    push:
        branches: [master]
        paths:
          - 'app/src/main/**'  # Only trigger on changes in this directory

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: clone peanut 
              uses: actions/checkout@v4
              with:
                fetch-depth: 0

            - name: clone peanutMain
              uses: actions/checkout@v2
              with:
                repository: IMOitself/peanutMain
                path: peanutMain
                token: ${{ secrets.ACTIONS_PAT }}

            - name: override peanutMain with main folders
              run: |
                echo "□ current directory contents..."
                ls
                
                echo "□ navigate to cloned repo (peanutMain).."
                cd peanutMain
                
                echo "□ git status.."
                git status --porcelain
                
                peanutMain=$(pwd)
                
                echo "□ delete all except the git folder.."
                ls -a
                find . -maxdepth 1 ! -name '.git' ! -name '.' -exec rm -rf {} +
                ls -a
                
                echo "□ navigate back.."
                cd ..
                ls
                
                echo "□ go to app/src.."
                cd app/src
                ls
                
                echo "□ copy the contents of 'main' folder to peanutMain.."
                cp -r main/* $peanutMain
                cd $peanutMain
                ls -a
                
                echo "□ git status.."
                git status --porcelain
                
                if [ -z "$(git status --porcelain)" ]; then
                  echo "□ no changes."
                
                else
                  echo "□ changes found.."
                  git config user.email "russjonn@gmail.com"
                  git config user.name "IMOitself (github action)"
                
                  echo "□ read previous last commit hash.."
                  cd ..
                
                  last_commit_hash_file=".github/workflows/last-commit-hash.txt"
                  if [ ! -e "$last_commit_hash_file" ]; then
                    echo "$git rev-parse HEAD^" > "$last_commit_hash_file"
                  fi
                
                  last_commit_hash=$(cat "$last_commit_hash_file")
                
                  echo "□ get commit messages after the commit hash.."
                  last_commits=$(git log $last_commit_hash..HEAD --oneline --pretty=format:"%s"| xargs)
                
                  echo "□ record new last commit hash.."
                  last_commit_hash="$(git rev-parse -- HEAD)"
                  echo "$last_commit_hash" > "$last_commit_hash_file"
                
                  echo "□ create commit message.."
                  commit_message=$(echo -e "$last_commits \n\n (auto sync)")
                
                  echo "□ committing.."
                  cd $peanutMain
                  git add .
                  git commit -m "$commit_message"
                
                  echo "□ pushing.."
                
                  git push
                fi
